# Makefile for X11-Basic (c) Markus Hoffmann V.@version@

# This file is part of X11-Basic, the basic interpreter for Unix/X
# ======================================================================
# X11-Basic is free software and comes with NO WARRANTY - read the file
# COPYING for details

# Insert the defs for your machine

SHELL=/bin/sh

# Directories
prefix=@prefix@
exec_prefix=@exec_prefix@
datarootdir = @datarootdir@

BINDIR=@bindir@
DATADIR=@datadir@
ICONDIR=$(DATADIR)/icons/hicolor/scalable/apps
DESKTOPDIR=$(DATADIR)/applications
LIBDIR=@libdir@
MANDIR=@mandir@
INCDIR=@prefix@/include/x11basic

LIBNO=@version@

RELEASE=60


# Register variables (-ffixed-reg) -Wall
REGS=@regs@  

# Optimization and debugging options
OPT=@copt@

# Additional header file paths
INC=@X_CFLAGS@ 
WININC=-I./WINDOWS -I./WINDOWS/include -I./WINDOWS/include/GMP
TINEINC=@X_CFLAGS@ -I/usr/include/tine -I/usr/include/doocs -I.

# defines for special flavours

DEF=@def@ 

# Compiler
#CC=@CC@ @static@ $(REGS)
CC=@CC@ -Wall
CCSHARED=@CC@  -fPIC -shared -Wl,-Bsymbolic-functions 

# Cross-Compiler fuer Windows-Excecutable

WINCC=i686-w64-mingw32-gcc

# Cross-Compiler fuer ATARI ST TOS
TOSCC=m68k-atari-mint-gcc

# Cross-Compiler fuer ARM-Linux-Excecutable

ARMCC=arm-linux-gcc 

# Preprocessor
CPP=@CPP@

CFLAGS= @CFLAGS@ $(INC) $(DEF) $(OPT) $(REGS)

# these are the objects which go into libx11basic

LIBOBJS=xbasic.o tools.o loadprg.o file.o io.o io_basic.o parser.o variablen.o svariablen.o \
        array.o parameter.o fft.o mathematics.o memory.o \
        runtime.o wort_sep.o ltext.o functions.o sfunctions.o afunctions.o \
	kommandos.o gkommandos.o bitmap.o do_gets.o errortxt.o window.o\
	sysVstuff.o aes.o graphics.o sound.o number.o keywords.o decode.o \
	virtual-machine.o vm-api.o type.o lodepng.o md5.o sha1.o ccs.o

# these are objects which are compiled to binary

MAINOBJS= main.o xbbc.o xbvm.o xb2c.o

EXTRAOBJS= bytecode.o framebuffer.o raw_mouse.o raw_keyboard.o spat-a-fnt.o 5x7.o consolefont.o \
	   unifont.o unifont57.o terminal.o 8x16.o

# Sources for libx11basic

LIBCSRC=$(LIBOBJS:.o=.c)

FBLIBOBJS= $(LIBOBJS) framebuffer.o raw_mouse.o raw_keyboard.o consolefont.o terminal.o spat-a-fnt.o 8x16.o 5x7.o unifont.o unifont57.o 
LIBCSRCFB=$(FBLIBOBJS:.o=.c) 





TOSLIBOBJS= $(LIBOBJS) 
CSRC=    $(LIBOBJS:.o=.c) 5x7-rev.c $(EXTRAOBJS:.o=.c) $(MAINOBJS:.o=.c)

DEPSRC=  $(CSRC) 

# Headerfiles which should be added to the distribution

HSRC=  aes.h afunctions.h android.h array.h bitmap.h bytecode.h \
       consolefont.h decode.h defs.h fft.h file.h framebuffer.h functions.h \
       gkommandos.h graphics.h io.h kommandos.h keywords.h \
       mathematics.h number.h options.h parameter.h parser.h raw_mouse.h raw_keyboard.h \
       sfunctions.h sound.h svariablen.h sysVstuff.h \
       terminal.h type.h variablen.h virtual-machine.h \
       window.h wort_sep.h x11basic.h xb2csol.h xbasic.h memory.h lodepng.h \
       md5.h sha1.h ccs.h

EXAMPLES_TESTS= \
	../examples/tests/*.bas \
	../examples/tests/README \
	../examples/tests/alerts* \
	../examples/c-usage/* \
	../examples2/gui/* \
	../examples2/internet/*.bas \
	../examples2/misc/* \
	../examples2/benchmarks/* \
	../examples2/console/cursestest.bas \
	../examples2/console/serial.bas \
	../examples2/utils/stepdir.bas \
	../examples2/sound/speaktest.bas \
	../examples2/sound/tonedial.bas \
	../examples2/Android/modprefs.bas \
	../examples2/RELEASE-NOTES
	
EXAMPLES_TOMTOM= \
	../examples2/TomTom/*

EXAMPLES_FRAGMENTS= \
	../examples2/fragments/*

EXAMPLES_GPS_EARTH= \
	../examples2/gps/*

EXAMPLES_INTERNET= \
	../examples2/internet/*.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_CGI= \
	../examples2/internet/cgi/*.cgi \
	../examples2/resources/* \
	../examples2/RELEASE-NOTES

EXAMPLES_3D_GRAPHICS= \
	../examples2/3D-graphics/*.bas \
	../examples2/graphics/3Dmaze.bas \
	../examples2/graphics/3Dng.bas \
	../examples2/graphics/carre3D.bas \
	../examples2/graphics/kugel.bas \
	../examples2/graphics/netzgraf.bas \
	../examples2/graphics/terrain.bas \
	../examples2/simulation/rot.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_CONSOLE= \
	../examples2/console/ansi*.bas \
	../examples2/console/cfont.bas \
	../examples2/console/console_clock.bas \
	../examples2/console/g*.bas \
	../examples2/console/l*.bas \
	../examples2/console/m*.bas \
	../examples2/console/showunicode.bas \
	../examples2/console/t*.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_UTILITY= \
	examples/compiler/bas2x11basic.bas \
	examples/compiler/gui2bas.bas \
	examples/compiler/inline.bas \
	examples/compiler/xbc.bas \
	examples/compiler/xbc-st.bas \
	examples/compiler/xbc-win.bas \
	../examples2/utils/a2ov2.bas \
	../examples2/utils/ans2bas.bas \
	../examples2/utils/draftit \
	../examples2/utils/fotoweb.bas \
	../examples2/utils/mid2mp3.bas \
	../examples2/utils/o*.bas \
	../examples2/utils/raw2bmp.bas \
	../examples2/utils/myunzip.bas \
	../examples2/utils/myzip.bas \
	../examples2/utils/scramble.bas \
	../examples2/console/showunicode.bas \
	../examples2/sound/tonedial.bas \
	../examples2/sound/morse.bas \
	../examples2/calculation/finanzierung.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_ASTRONOMY= \
	../examples2/utils/o*.bas \
	../examples2/utils/mondphas.bas \
	../examples2/utils/sonnenaufgang.bas \
	../examples2/calculation/kw.bas \
	../examples2/fragments/planeten.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_PHYSICS= \
	../examples2/utils/sonnenaufgang.bas \
	../examples2/simulation/boing.bas \
	../examples2/simulation/dipolfel.bas \
	../examples2/simulation/kohaerenz.bas \
	../examples2/simulation/mpendel.bas \
	../examples2/simulation/qatom.bas \
	../examples2/simulation/resonnances.bas \
	../examples2/simulation/rot.bas \
	../examples2/simulation/echoanim.bas \
	../examples2/simulation/echorealistic.bas \
	../examples2/calculation/dbtabelle.bas \
	../examples2/calculation/diffglei.* \
	../examples2/physik/linsen.bas \
	../examples2/physik/b7coge.dat \
	../examples2/physik/spec.bas \
	../examples2/physik/v48.bas \
	../examples2/simulation/3kp.bas \
	../examples2/simulation/brot.bas \
	../examples2/simulation/schottky-p.bas \
	../examples2/simulation/trackit.c \
	../examples2/simulation/wasser.bas \
	../examples2/fragments/planeten.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_MATHEMATICS= \
	../examples2/misc/zahlen.bas \
	../examples2/calculation/1ziff.bas \
	../examples2/calculation/basprime.bas \
	../examples2/calculation/brefeld2.bas \
	../examples2/calculation/brefeld.bas \
	../examples2/calculation/complex-mandel.bas \
	../examples2/calculation/factorize.bas \
	../examples2/calculation/factorize-big.bas \
	../examples2/calculation/factors.bas \
	../examples2/calculation/floatingpoint.bas \
	../examples2/calculation/gen_primes.bas \
	../examples2/calculation/huffman.bas \
	../examples2/calculation/Zn-inv.bas \
	../examples2/calculation/MillionPI.bas \
	../examples2/calculation/pi800.bas \
	../examples2/calculation/randomminmax.bas \
	../examples2/calculation/sieve.bas \
	../examples2/calculation/sqr.bas \
	../examples2/calculation/tsp.bas \
	../examples2/simulation/bifur.bas \
	../examples2/simulation/life.bas \
	../examples2/graphics/complex-mandel-sequence.bas \
	../examples2/graphics/dla.bas \
	../examples2/graphics/farn.bas \
	../examples2/graphics/fastmandel.bas \
	../examples2/graphics/Fractal_Cloud.bas \
	../examples2/graphics/fractal-tree.bas \
	../examples2/graphics/lorenz-attractor.bas \
	../examples2/graphics/mandel.bas \
	../examples2/graphics/mandel-simple.bas \
	../examples2/graphics/replicator.bas \
	../examples2/graphics/rotozoomer-9.bas \
	../examples2/graphics/sattrac1.bas \
	../examples2/graphics/sierpinski.bas \
	../examples2/graphics/spitzenteppich.bas \
	../examples2/RELEASE-NOTES

EXAMPLES_ANIMATION= \
	../examples2/RELEASE-NOTES

EXAMPLES_GAMES= \
	../examples2/calculation/puzzle-box.bas \
	../examples2/games/atomium.bas \
	../examples2/games/zahlenrate.bas \
	../examples2/games/last.bas \
	../examples2/games/TicTacToe.bas \
	../examples2/games/lander.bas \
	../examples2/games/civil-war.bas \
	../examples2/games/crap.bas \
	../examples2/games/sudoku.bas \
	../examples2/games/Ballerburg/anleitung.txt \
	../examples2/games/Ballerburg/ballerburg.bas \
	../examples2/games/Ballerburg/baller.dat \
	../examples2/games/Ballerburg/baller.rsc \
	../examples2/games/Ballerburg/README \
	../examples2/games/Ballerburg/sound/*.ogg \
	../examples2/RELEASE-NOTES

EXAMPLES_ATARI_ST= \
	../examples2/Atari-ST/* \
	../examples2/RELEASE-NOTES
	

EXAMPLES= $(EXAMPLES_TESTS) $(EXAMPLES_TOMTOM)  $(EXAMPLES_FRAGMENTS) \
          $(EXAMPLES_GPS_EARTH) $(EXAMPLES_INTERNET) $(EXAMPLES_CGI) \
	  $(EXAMPLES_3D_GRAPHICS) $(EXAMPLES_CONSOLE)  $(EXAMPLES_UTILITY) \
	  $(EXAMPLES_ASTRONOMY) $(EXAMPLES_PHYSICS) $(EXAMPLES_ANIMATION) \
	  $(EXAMPLES_GAMES) $(EXAMPLES_MATHEMATICS) $(EXAMPLES_ATARI_ST) \
        ../examples2/RELEASE-NOTES 

DIST= ../README ../doc/INSTALL ../COPYING ../doc/man-pages/*.1 \
	../doc/ACKNOWLEGEMENTS \
	../doc/AUTHORS ../doc/HISTORY ../RELEASE_NOTES ../doc/manual/Outputs/X11-Basic-manual-$(LIBNO).txt \
      ../doc/editors/*  $(HSRC) $(CSRC) WINDOWS/X11-Basic.iss \
      config.h.in config.h.tomtom config.h.atari \
        Makefile.in configure config.guess configure.in \
        x11basic.spec x11basic.desktop x11basic.svg 5x7-rev.c \
        bitmaps/* ../logo/x11basicVersion.fig \
        examples/compiler/xbc.bas.in \
        examples/compiler/inline.bas \
        examples/compiler/bas2x11basic.bas \
        examples/compiler/gui2bas.bas \
        examples/compiler/xbc-win.bas \
        examples/compiler/xbc-st.bas \
        examples/compiler/ybasic \
        examples/c-usage/c-demo.c \
        examples/c-usage/c-demo2.c \
        examples/c-usage/library.bas \
        examples/c-usage/Makefile \
	examples/tests/* \
	examples/graphics/* 

BINDIST=../README ../doc/INSTALL ../COPYING ../doc/man-pages/*.1 \
	../doc/ACKNOWLEGEMENTS ../doc/AUTHORS ../doc/HISTORY \
	../RELEASE_NOTES ../doc/manual/Outputs/X11-Basic-manual-$(LIBNO).txt \
	../doc/editors/* xbasic fbxbasic xbc bas2x11basic xbbc xbvm xb2c \
	x11basic.h xb2csol.h x11basic.a libx11basic.so \
      examples/compiler/xbc.bas.in \
      examples/compiler/inline.bas \
      examples/compiler/bas2x11basic.bas \
      examples/compiler/gui2bas.bas \
      examples/compiler/ybasic \
      examples/c-usage/c-demo.c \
      examples/c-usage/c-demo2.c \
      examples/c-usage/library.bas \
      examples/c-usage/Makefile \
      examples/tests/* \
      examples/graphics/* 

WINDIST=WINDOWS/lib/SDL.dll \
        WINDOWS/lib/libusb0.dll \
        WINDOWS/lib/README-libusb.txt \
        WINDOWS/lib/README-SDL.txt \
        WINDOWS/lib/README-GMP.txt \
        WINDOWS/lib/README-LAPACK.txt \
	xbasic.exe xbvm.exe xbbc.exe xbc.exe xb2c.exe \
        WINDOWS/readme-windows.txt \
	WINDOWS/x11basic.ico  WINDOWS/demo.bas \
	WINDOWS/bas.ico ../COPYING ../RELEASE_NOTES INTRO

TOSDIST=xbasic.prg xbvm.prg xbbc.ttp xbc.prg xb2c.ttp \
        ATARI-ST/AUTO/VT100EMU.PRG ATARI-ST/AUTO/VT100EMU.TXT \
        ATARI-ST/readme.txt ATARI-ST/demo.bas ../RELEASE_NOTES \
	../doc/manual/Outputs/X11-Basic-manual-$(LIBNO).txt


DIST2=$(LIBOBJS:.o=.c) main.c

DIR=X11Basic-@version@
DIR2=X11Basic-src-@version@
DIR3=X11Basic-bin-@version@
DIR33=$(DIR)-bin
TINEDIR=tinexbasic-@version@
TINEDIST=$(DIST) ../doc/tine-xbasic.html examples2/DESY/*
DOOCSDIR=doocsxbasic-@version@
DOOCSDIST=$(DIST) src/Extensions/doocs-wrapper.cc ../doc/doocs-xbasic.html \
                  ../doc/tine-xbasic.html examples2/DESY/*

LINKFLAGS = @LDFLAGS@
WINLINKFLAGS = -L./WINDOWS/lib 

LIBS =  @libs@ @xlibs@ @xtra@
# fuer Version ohne X
LIBS1 =  @libs@
LIBS2 =   -L. -ldl -lm  -lncurses TomTom.extension/contrib/readline-5.2/libreadline.a 


WINLIBS = -lm  -lgdi32 -lkernel32 -luser32 -lole32 -luuid -lwsock32  -lSDL
TOSLIBS = -lm  -lgem

MYWINLIBS = x11basic.lib WINDOWS/lib/libgfx.lib WINDOWS/lib/libgmp.a \
            WINDOWS/clapack/lapack.lib WINDOWS/lib/libusb.a \
	    WINDOWS/blas/blas.lib WINDOWS/f2c/f2c.lib 

MYTOSLIBS = x11basic.toslib

all :    configure Makefile xbasic xb2c xbbc xbvm xbc bas2x11basic 


configure : configure.in
	autoconf
Makefile : Makefile.in
	./configure --prefix=/usr

config.h: config.h.in
	./configure --prefix=/usr
 

###################################################
#### Fundamentals for X11-Basic (UNIX/LINUX) ######


# Make the (dynamic) library

libx11basic.so: libx11basic.so.$(LIBNO)
	ln -s -f $< libx11basic.so.1
	ln -s -f libx11basic.so.1 libx11basic.so
libx11basic.so.$(LIBNO) : $(LIBCSRC) Makefile
	$(CCSHARED) $(LINKFLAGS) $(CFLAGS) -Wl,-soname,$@ -o $@ $(LIBCSRC) $(LIBS) 
	strip $@

# Make the (static) library


x11basic.a.debug : $(LIBOBJS)
	ar -ru $@ $(LIBOBJS) 

x11basic.a : x11basic.a.debug
	cp $< $@
	strip --strip-debug $@
	 
# Make the (dynamically linked) X11-Basic excecutable

xbasic : libx11basic.so main.o
	$(CC) -L. $(LINKFLAGS) -o $@ main.o $(LIBS) -lx11basic 
	strip $@

# Make th X11-Basic compiler manager xbc


examples/compiler/xbc.bas: examples/compiler/xbc.bas.in
	./configure --prefix=/usr

xbc : xbasic libx11basic.so examples/compiler/xbc.bas
	LD_LIBRARY_PATH=. ./xbasic examples/compiler/xbc.bas --dynamic -o $@ -L .
	strip $@

# Make the bytecode compiler xbbc

xbbc : bytecode.h bytecode.o xbbc.o
	$(CC) -o $@ xbbc.o bytecode.o  -L . $(LINKFLAGS) $(LIBS) -lx11basic 
	strip $@
xbbc.static : xbbc.o bytecode.o x11basic.a
	$(CC) -o $@ xbbc.o bytecode.o x11basic.a $(LIBS)		
	strip $@
xbbc.debug : xbbc.o bytecode.o x11basic.a.debug
	$(CC) -o $@ xbbc.o bytecode.o  x11basic.a.debug $(LIBS)		

# Make the virtual machine for interpreting the bytecode

xbvm : bytecode.h xbvm.c 
	$(CC) -o $@ xbvm.c  -L . $(LINKFLAGS) $(LIBS)  -lx11basic 
	strip $@
xbvm.static : xbvm.o x11basic.a
	$(CC) -o $@ xbvm.o x11basic.a $(LIBS)
	strip $@
xbvm.debug : xbvm.o  x11basic.a.debug 
	$(CC) -o $@ xbvm.o x11basic.a.debug $(LIBS) 	

###################################################
#### Fundamentals for X11-Basic (MS WINDOWS) ######

# Make the (dynamic) library for MS WINDOWS

libx11basic.dll : x11basic.lib
	$(WINCC) -shared -o $@ x11basic.lib

# Make the (static) library for MS WINDOWS

x11basic.lib : $(LIBCSRC) WINDOWS/fnmatch.c $(HSRC) WINDOWS/fnmatch.h
	rm -f *.o
	$(WINCC) -DWINDOWS -c $(LIBCSRC) WINDOWS/fnmatch.c $(WININC) 
	i686-w64-mingw32-ar -ru $@ $(LIBOBJS) fnmatch.o
	rm -f *.o

# Make the exe for MS WINDOWS

xbasic.exe: main.c $(MYWINLIBS)
	$(WINCC) -DWINDOWS $(OPT) $(WININC) $(WINLINKFLAGS) main.c -o $@ $(MYWINLIBS) \
	 $(WINLIBS)
	strip $@
xbbc.exe: bytecode.h bytecode.c xbbc.c $(MYWINLIBS)
	$(WINCC) -DWINDOWS $(OPT) $(WININC) $(WINLINKFLAGS) -o $@ xbbc.c bytecode.c \
	$(MYWINLIBS) $(WINLIBS)
	strip $@
xb2c.exe: x11basic.lib xb2c.c 
	$(WINCC) -DWINDOWS $(OPT) $(WININC) $(WINLINKFLAGS) -o $@ xb2c.c  \
	$(MYWINLIBS) $(WINLIBS)
	strip $@

xbvm.exe: bytecode.h xbvm.c $(MYWINLIBS)
	$(WINCC) -DWINDOWS $(OPT) $(WININC) $(WINLINKFLAGS) -o $@ xbvm.c \
	 $(MYWINLIBS) $(WINLIBS)
	strip $@

# Make the X11-Basic compiler (for MS WINDOWS)

xbc-win.b: examples/compiler/xbc-win.bas xbbc.static
	xbbc.static -o $@ examples/compiler/xbc-win.bas
xbc.exe : xbasic.static  xbvm.exe xbc-win.b
	./xbasic.static -q xbc-win.b -o $@ 
	chmod 755 $@ 


###################################################
# Make the exe for ATARI ST

xbasic.prg: x11basic.toslib main.c
	$(TOSCC) -DATARI $(OPT) $(WINLINKFLAGS) main.c -o $@ $(MYTOSLIBS) \
	 $(TOSLIBS)
	m68k-atari-mint-strip $@
xbbc.ttp: bytecode.h bytecode.c x11basic.toslib
	$(TOSCC) -DATARI  $(OPT)  -o $@ xbbc.c bytecode.c $(MYTOSLIBS) $(TOSLIBS)
	m68k-atari-mint-strip $@
xbvm.prg: x11basic.toslib bytecode.h xbvm.c 
	$(TOSCC) -DATARI $(OPT) $(WINLINKFLAGS) -o $@ xbvm.c \
	 $(MYTOSLIBS) $(TOSLIBS)
	m68k-atari-mint-strip $@
xbc.prg : xbasic examples/compiler/xbc-st.bas xbvm.prg xbbc
	LD_LIBRARY_PATH=. ./xbasic -q examples/compiler/xbc-st.bas -o $@
	chmod 755 $@ 
xb2c.ttp: xb2c.c tools.c kommandos.c functions.c io_basic.c afunctions.c sfunctions.c file.c svariablen.c
	$(TOSCC) -DATARI -DDUMMY_LIST $(OPT) -o $@ xb2c.c tools.c kommandos.c functions.c io_basic.c afunctions.c sfunctions.c svariablen.c file.c
	m68k-atari-mint-strip $@
	
# Make the (static) library for ATARI ST

x11basic.toslib : $(DIST2) mathematics.c
	rm -f *.o
	$(TOSCC) -DATARI -c $(DIST2) 
	$(TOSCC) -DATARI -c mathematics.c
	m68k-atari-mint-ar -ru $@ $(TOSLIBOBJS) 
	rm -f *.o



# Make a version of X11-Basic which uses the framebuffer (and touchscreen) device
# instead of X11-Graphics. This way, the interpreter (and all basic programs) can run without the X-Server


fb: fbxbasic
fbxbasic: xbasic.framebuffer
	cp xbasic.framebuffer $@
xbasic.framebuffer : main.c $(LIBCSRCFB)
	$(CC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ main.c $(LIBCSRCFB)  $(LIBS1) 
	strip $@

# Make a version of X11-basic which is statically linked to libx11basic and 
# therefor can be used without the .so file

xbasic.static : x11basic.a main.o
	$(CC) $(OPT) $(LINKFLAGS) -o $@ main.o x11basic.a $(LIBS) 
	strip $@
xbasic.debug :	main.o x11basic.a.debug
	$(CC) $(OPT) $(LINKFLAGS) -o $@ main.o x11basic.a.debug $(LIBS) 
	
static : xbasic.static	xbbc.static xbvm.static xb2c.static

debug  : xbasic.debug	xbbc.debug xb2c.debug xbvm.debug
strip  : xbasic xbbc xbvm xb2c
	strip xbasic
	strip xbbc
	strip xbvm
	strip xb2c



debugtest : xbasic.debug
	valgrind --leak-check=full --track-origins=yes --partial-loads-ok=yes ./xbasic.debug ../examples2/calculation/diffglei.bas

# Make a version of X11-basic which uses the SDL library for graphics 

xbasic.sdl : main.c $(LIBCSRC)
	$(CC) -DUSE_SDL $(OPT) $(LINKFLAGS) -o $@ main.c $(LIBCSRC) $(LIBS) -lSDL -lSDL_gfx
	strip $@

sdl : xbasic.sdl	

config.h: configure

###############################################################
# Make a version of X11-Basic, which runs on the TomTom devices

x11basic.a.tomtom : $(LIBCSRCFB)
	rm -f config.h
	ln -s config.h.tomtom config.h
	rm -f *.o
	$(ARMCC) -ITomTom.extension/ -DFRAMEBUFFER $(OPT)  -c $(LIBCSRCFB)  
	arm-linux-ar -ru $@ $(FBLIBOBJS)
	rm -f *.o config.h

libx11basic.so.$(LIBNO).tomtom : $(LIBCSRCFB)
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -ITomTom.extension/ -fPIC -DFRAMEBUFFER $(OPT) -shared -Wl,-soname,libx11basic.so.$(LIBNO) -o $@ $(LIBCSRCFB)
	arm-linux-strip $@
	rm -f config.h

xbasic.tomtom :  main.c x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ main.c x11basic.a.tomtom $(LIBS2)  
	arm-linux-strip $@
	rm -f config.h

xbvm.tomtom : bytecode.h xbvm.c  x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@ xbvm.c  x11basic.a.tomtom $(LIBS2)  
	arm-linux-strip $@
	rm -f config.h

xbbc.tomtom : xbbc.c bytecode.h bytecode.c  x11basic.a.tomtom
	rm -f config.h
	ln -s config.h.tomtom config.h
	$(ARMCC) -DFRAMEBUFFER $(OPT) $(LINKFLAGS) -o $@  xbbc.c bytecode.c  x11basic.a.tomtom $(LIBS2) 
	rm -f config.h


# This gives the TomTom Distribution

$(DIR33).zip: README xbasic.tomtom  xbvm.tomtom TomTom.extension/x11basic.bmp TomTom.extension/x11basic-demo TomTom.extension/X11-Basic.cap Makefile ../RELEASE_NOTES
	rm -rf /tmp/$(DIR33)
	mkdir /tmp/$(DIR33)
	mkdir /tmp/$(DIR33)/bin
	mkdir /tmp/$(DIR33)/X11-Basic
	mkdir /tmp/$(DIR33)/X11-Basic/examples
	mkdir /tmp/$(DIR33)/SDKRegistry
	rsync -a README /tmp/$(DIR33)/
	cp ../README /tmp/$(DIR33)/X11-Basic/
	cp ../RELEASE_NOTES /tmp/$(DIR33)/X11-Basic/
	(cd ..; tar cf - $(EXAMPLES))|(cd /tmp/$(DIR33)/X11-Basic; tar xpf -)
	rsync -a xbasic.tomtom /tmp/$(DIR33)/bin/xbasic
	rsync -a xbvm.tomtom /tmp/$(DIR33)/bin/xbvm
#	rsync -a xbbc.tomtom /tmp/$(DIR33)/bin/xbbc
	rsync -a TomTom.extension/x11basic-demo /tmp/$(DIR33)/X11-Basic/xbasic-demo
	rsync -a TomTom.extension/x11basic.bmp /tmp/$(DIR33)/SDKRegistry/
	rsync -a TomTom.extension/X11-Basic.cap /tmp/$(DIR33)/SDKRegistry/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/terminfo /tmp/$(DIR33)/lib/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/libncurses.so.5 /tmp/$(DIR33)/lib/
#	rsync -a /home/hoffmann/c/TTconsole/src/utility/bin/libreadline.so.4 /tmp/$(DIR33)/lib/
	rsync -a /home/hoffmann/c/TTconsole/src/utility/lib/termcap /tmp/$(DIR33)/lib/
	(cd /tmp ; zip -r $(DIR33).zip $(DIR33))
	mv /tmp/$(DIR33).zip .

TomTom: $(DIR33).zip


# Make the Windows distribution in form of a .zip file including an installer
# this is depreciated. Better use Inno-Setup to create a self installing
# .exe file

windows: $(WINDIST) X11-Basic.iss
	rm -f X11-Basic-@version@-$(RELEASE)-win.zip
	zip -j -D  -o X11-Basic-@version@-$(RELEASE)-win.zip $(WINDIST)
	iscc X11-Basic.iss

# Make an ATARI ST version

tos: $(TOSDIST) xbasic.prg xbvm.prg xbbc.ttp xbc.prg xb2c.ttp
	rm -f X11-Basic-atari-@version@.zip
	zip -j -D  -o X11-Basic-@version@-st.zip $(TOSDIST)


examples: X11-Basic-examples-$(LIBNO)-$(RELEASE).zip \
	X11-Basic-examples-$(LIBNO).tar.gz 
	
	
# Das hier sind wirklich alle Beispielprogramme, zu Archivierungszwecken
X11-Basic-examples-$(LIBNO)-$(RELEASE).zip:
	cd .. ; zip -r  src/X11-Basic-examples-$(LIBNO)-$(RELEASE).zip examples2/

X11-Basic-examples-$(LIBNO).tar.gz:
	cd .. ; tar czf  src/X11-Basic-examples-$(LIBNO).tar.gz examples2/

# Fuer die Control System Varianten

tinexbasic.dyn : $(LIBOBJS) main.o 
	$(CC) -DTINE  $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS)  -ltine 
	strip $@
tinexbasic : $(LIBOBJS) main.o 
	$(CC) -DTINE $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) $(LIBS)  /usr/lib/libtine.a 
	strip $@
doocsxbasic.dyn : $(LIBOBJS) main.o  doocs-wrapper.o
	$(CC) -DTINE -DDOOCS  $(LINKFLAGS) -o $@ $(AOBJS) doocs-wrapper.o \
		$(LIBS)  -ltine -lDOOCSclient -lDOOCSserver 
	strip $@
doocsxbasic : $(LIBOBJS) main.o  doocs-wrapper.o
	g++ -DTINE -DDOOCS $(OPT) $(LINKFLAGS) -o $@ $(AOBJS) \
	$(LIBS) /usr/lib/libtine.a /usr/lib/libDOOCSclient.a \
	/usr/lib/libDOOCSserver.a doocs-wrapper.o 
	strip $@

lib:	libx11basic.so x11basic.a



# Make the ANSI-Basic to X11-Basic translator

bas2x11basic : xbc examples/compiler/bas2x11basic.bas
	LD_LIBRARY_PATH=. ./xbc examples/compiler/bas2x11basic.bas --dynamic -o $@ -L .
	strip $@
myzip : xbc ../examples2/utils/myzip.bas ../examples2/utils/myunzip.bas
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myzip.bas --dynamic -o myzip -L .
	LD_LIBRARY_PATH=. ./xbc ../examples2/utils/myunzip.bas --dynamic -o myunzip -L .
	strip myzip
	strip myunzip

afunctions_d.o: afunctions.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<
sfunctions_d.o: sfunctions.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<
svariablen_d.o: svariablen.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<
kommandos_d.o: kommandos.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<
functions_d.o: functions.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<
xb2c_d.o: xb2c.c
	$(CC) -c $(CFLAGS) -DDUMMY_LIST -o $@ $<

# make the X11-Basic to C translator
xb2c :  xb2c.o
	$(CC) -o $@ xb2c.o  -L . $(LIBS) -lx11basic 
	strip $@
xb2c.debug : xb2c_d.o file.o functions_d.o io_basic.o tools.o afunctions_d.o svariablen_d.o sfunctions_d.o kommandos_d.o keywords.o
	$(CC) -o $@ xb2c_d.o functions_d.o tools.o keywords.o afunctions_d.o svariablen_d.o file.o io_basic.o sfunctions_d.o kommandos_d.o $(LIBS)
xb2c.static : xb2c.debug
	cp $< $@
	strip $@

x11basic.tga: ../logo/x11basic-logo-1999.pov
	povray +I$< +O$@ +FT +W512 +H400 +V -D +X +MV3.0 +L/usr/share/fonts/truetype/msttcorefonts/
 
 
x11basic.eps : ../logo/x11basicVersion.fig
	fig2dev -L eps $< $@

%.svg : %.eps 
	convert  $< $@

install : xbasic fbxbasic x11basic.svg x11basic.desktop libx11basic.so x11basic.h xb2csol.h x11basic.a xbvm xbbc xbc xb2c bas2x11basic
	install -m 644 x11basic.svg $(ICONDIR)/
	install -m 644 x11basic.desktop $(DESKTOPDIR)/
	install -s -m 755 xbasic $(BINDIR)/
	install -s -m 755 fbxbasic $(BINDIR)/
	install -m 755 ../examples/compiler/ybasic $(BINDIR)/
	install -m 644 libx11basic.so.$(LIBNO) $(LIBDIR)/
	ln -s -f $(LIBDIR)/libx11basic.so.$(LIBNO) $(LIBDIR)/libx11basic.so.1
	ln -s -f $(LIBDIR)/libx11basic.so.1 $(LIBDIR)/libx11basic.so
	install -m 644 x11basic.a $(LIBDIR)/
	install -d $(MANDIR)
	install -d $(MANDIR)/man1
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/x11basic.1
	install -m 644 doc/man-pages/x11basic.1 $(MANDIR)/man1/xbasic.1
	install -m 644 doc/man-pages/ybasic.1   $(MANDIR)/man1/ybasic.1
	install -m 644 doc/man-pages/fbxbasic.1 $(MANDIR)/man1/fbxbasic.1
	install -s -m 755 xbc $(BINDIR)/
	install -s -m 755 xb2c $(BINDIR)/
	install -s -m 755 xbvm $(BINDIR)/
	install -s -m 755 xbbc $(BINDIR)/
	install -s -m 755 bas2x11basic $(BINDIR)/
	install -d $(INCDIR)
	install -m 644 x11basic.h $(INCDIR)/
	install -m 644 xb2csol.h $(INCDIR)/
	install -m 644 doc/man-pages/xbc.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xbbc.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xbvm.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/xb2c.1 $(MANDIR)/man1/
	install -m 644 doc/man-pages/bas2x11basic.1 $(MANDIR)/man1/
uninstall :
	rm -f $(ICONDIR)/x11basic.svg
	rm -f $(DESKTOPDIR)/x11basic.desktop
	rm -f $(LIBDIR)/libx11basic.so*
	rm -f $(LIBDIR)/x11basic.a
	rm -f $(BINDIR)/xbasic 
	rm -f $(BINDIR)/ybasic 
	rm -f $(BINDIR)/fbxbasic 
	rm -f $(BINDIR)/xbc 
	rm -f $(BINDIR)/xbvm 
	rm -f $(BINDIR)/xbbc
	rm -f $(BINDIR)/xb2c
	rm -f $(BINDIR)/bas2x11basic 
	rm -f $(MANDIR)/man1/ybasic.1
	rm -f $(MANDIR)/man1/xbasic.1
	rm -f $(MANDIR)/man1/fbxbasic.1
	rm -f $(MANDIR)/man1/x11basic.1 $(MANDIR)/man1/xbc.1 $(MANDIR)/man1/xbbc.1 $(MANDIR)/man1/xbvm.1
	rm -f $(MANDIR)/man1/bas2x11basic.1
	rm -f $(MANDIR)/man1/xb2c.1
	rm -f $(INCDIR)/x11basic.h
	rm -f $(INCDIR)/xb2csol.h
	rmdir $(INCDIR)
clean :
	rm -f *.o a.out b.out b.b Makefile.bak xbasic.debug xbbc.debug xb2c.debug \
	xbvm.debug backup-*.tgz *.d
	rm -rf doc-pak
moreclean : clean
	rm -f  xbasic xbbc xbvm xbc xb2c bas2x11basic libx11basic.so.1.* x11basic.a 11.c \
	       xbasic.sdl xbasic.framebuffer xbasic.static xbvm.static xb2c.static xbbc.static

distclean : moreclean
	rm -f Makefile config.cache config.status config.log config.h \
	X11-Basic-examples-@version@.zip  \
	X11-Basic-examples-$(LIBNO).zip \
	tinexbasic doocsxbasic xbasic.exe xbbc.exe xbc.exe xbvm.exe xb2c.exe \
	myzip myunzip bas2x11basic  x11basic.lib \
	xbvm.tomtom xbbc.tomtom xbasic.tomtom 
	rm -rf autom4te.cache

$(DIR).tar.gz : dist
dist :	$(DIST2)
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	(tar cf - $(DIST))|(cd /tmp/$(DIR); tar xpf -)
	(cd /tmp; tar cf - $(DIR)|gzip -9 > $(DIR).tar.gz)
	mv /tmp/$(DIR).tar.gz .
bindist : $(DIR3).zip


rpm :	$(DIR).tar.gz x11basic.spec
	cp $(DIR).tar.gz $(HOME)/rpmbuild/SOURCES/
#	rpm --buildroot /usr/src/packages/SOURCES/ -ba --clean x11basic.spec
	rpmbuild -ba  --clean --nodeps x11basic.spec

DEBDOC=	../doc/ACKNOWLEGEMENTS ../doc/AUTHORS ../doc/HISTORY Debian/changelog.Debian Debian/copyright \
	../doc/editors/nedit.defs ../doc/editors/README \
	../doc/editors/920.conf ../doc/editors/x11basic.lang \
	../doc/editors/x11basic.geany ../doc/editors/x11basic.nanorc \
	../RELEASE_NOTES ../README \
	../doc/manual/Outputs/X11-Basic-manual-$(LIBNO).txt

doc-pak: $(DEBDOC)
	mkdir -p $@
	cp ../doc/ACKNOWLEGEMENTS ../doc/HISTORY $@/
	cp ../doc/AUTHORS ../RELEASE_NOTES ../README $@/
	cp Debian/changelog.Debian $@/
	gzip -9 $@/changelog.Debian
	cp Debian/copyright $@/
	mkdir -p $@/editors/
	cp ../doc/editors/nedit.defs $@/editors/
	cp ../doc/editors/README $@/editors/
	cp ../doc/editors/920.conf $@/editors/
	cp ../doc/editors/x11basic.lang $@/editors/
	cp ../doc/editors/x11basic.geany $@/editors/
	cp ../doc/editors/x11basic.nanorc $@/editors/
	cp ../doc/manual/Outputs/X11-Basic-manual-$(LIBNO).txt $@/
	
	
deb :	$(BINDIST) doc-pak
	sudo checkinstall -D --pkgname x11basic --pkgversion @version@ \
	--pkgrelease $(RELEASE)  \
	--maintainer "kollo@users.sourceforge.net" \
        --requires libc6,libasound2,libreadline6,liblapack3,libgmp10,fftw2 --backup  \
	--pkggroup interpreters --provides libx11basic  \
	--pkglicense GPL --strip=yes --stripso=yes --reset-uids 
	rm -f backup-*.tgz
	mv x11basic_$(LIBNO)-$(RELEASE)_*.deb Debian/Outputs/
deb2 :	$(DIR).tar.gz
	rm -rf /tmp/$(DIR)
	mkdir /tmp/$(DIR)
	cp $(DIR).tar.gz /tmp/$(DIR)/
	(cd /tmp/$(DIR); \
	tar xzf $(DIR).tar.gz;\
	mv $(DIR) x11basic-$(LIBNO) )
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	dh_make -s -c gpl2 -e kollo@users.sourceforge.net -f ../$(DIR).tar.gz)
	cp debcontrol.spec /tmp/$(DIR)/x11basic-$(LIBNO)/debian/control
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	dpkg-depcheck -d ./configure;\
	rm -f examples/compiler/xbc.bas)
	(cd /tmp/$(DIR)/x11basic-$(LIBNO); \
	sudo dpkg-buildpackage -rfakeroot)

tinerpm : $(TINEDIR).tar.gz Extensions/tinexbasic.spec
	cp $(TINEDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean Extensions/tinexbasic.spec
doocsrpm : $(DOOCSDIR).tar.gz Extensions/doocsxbasic.spec
	cp $(DOOCSDIR).tar.gz /usr/src/packages/SOURCES/
	rpmbuild -ba --clean Extensions/doocsxbasic.spec
$(DIR3).zip : $(BINDIST)
	rm -rf /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)
	mkdir /tmp/$(DIR3)/bin
	mkdir /tmp/$(DIR3)/man
	rsync -a README /tmp/$(DIR3)/
	rsync -a INSTALL /tmp/$(DIR3)/
	rsync -a RELEASE_NOTES /tmp/$(DIR3)/
	rsync -a xbasic /tmp/$(DIR3)/bin/
	rsync -a xbc /tmp/$(DIR3)/bin/
	rsync -a ../doc/man-pages/ybasic.1 /tmp/$(DIR3)/man/ybasic.1
	rsync -a ../doc/man-pages/fbxbasic.1 /tmp/$(DIR3)/man/fbxbasic.1
	rsync -a ../doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/xbasic.1
	rsync -a ../doc/man-pages/x11basic.1 /tmp/$(DIR3)/man/
	(cd /tmp ; zip -r $(DIR3).zip $(DIR3))
	mv /tmp/$(DIR3).zip .	

# create DSL package (for Damn Small Linux MyDSL)	
dslpackage : xbasic.staticreadline
	(cd /dev/shm; mkdir -p home/dsl/.xtdesktop)
	convert Windows-Installer/x11basic.ico /dev/shm/home/dsl/.xtdesktop/x11basic.png
	echo "table Icon" > /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Type: Program" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Caption: X11Basic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Command: aterm -e /opt/X11Basic-@version@/xbasic" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Icon: .xtdesktop/x11basic.png" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  X: 405" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "  Y: 25" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	echo "end" >> /dev/shm/home/dsl/.xtdesktop/x11basic.lnk
	(cd /dev/shm; mkdir -p opt/X11Basic-@version@)
	cp xbasic.staticreadline /dev/shm/opt/X11Basic-@version@/xbasic
	(cd /dev/shm; tar czf X11Basic.tar.gz home/dsl/.xtdesktop/x11basic* opt/X11Basic-@version@)
	mv /dev/shm/X11Basic.tar.gz .
	(md5sum X11Basic.tar.gz > X11Basic.tar.gz.md5.txt )
check :	xbasic
	LD_LIBRARY_PATH=. ./xbasic -e version
	
	

# Auto dependency stuff (from info make)
%.d: %.c
	$(CC) -MM -MT $(@:.d=.o) -MT $@ $(CPPFLAGS) $< -o $@
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),distclean)
-include $(DEPSRC:.c=.d)
endif
endif
